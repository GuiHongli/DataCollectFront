import{s as f}from"./request-a0feafd1.js";import{_ as ve,r as m,g as X,o as _e,a as k,i as ye,b as s,c as p,d as i,e as a,w as n,E as be,j as v,f as c,k as he,l as U,t as E,F as C,m as V,n as K}from"./index-523b1615.js";const Ue={name:"LogicEnvironment",setup(){const M=m(!1),l=m([]),L=m(!1),o=m(""),q=m(),P=m([]),z=m([]),D=m([]),g=m(!1),Q=m([]),w=m([]),N=m(null),_=m(null),T=m(!1),F=m([]),A=m([]),y=m(null),I=m(!1),b=m([{name:"",description:""}]),x=X({current:1,size:10,total:0}),d=X({id:null,name:"",executorId:null,selectedUeIds:[],selectedNetworkIds:[],description:"",status:1}),G={name:[{required:!0,message:"请输入逻辑环境名称",trigger:"blur"}],executorId:[{required:!0,message:"请选择执行机",trigger:"change"}],selectedUeIds:[{required:!0,message:"请选择UE",trigger:"change"}]},h=async()=>{M.value=!0;try{const t={current:x.current,size:x.size},r=await f({url:"/logic-environment/page",method:"get",params:t});l.value=r.data.records,x.total=r.data.total}catch(t){console.error("加载数据失败:",t)}finally{M.value=!1}},O=async()=>{try{const t=await f({url:"/executor/options",method:"get"});P.value=t.data}catch(t){console.error("加载执行机数据失败:",t)}},e=async()=>{try{const t=await f({url:"/ue/options",method:"get"});z.value=t.data}catch(t){console.error("加载UE数据失败:",t)}},u=async()=>{try{const t=await f({url:"/logic-network/list",method:"get"});D.value=t.data}catch(t){console.error("加载组网数据失败:",t)}},S=t=>{const r=z.value.find(B=>B.id===t);return r?`${r.name} (${r.ueId}) - ${r.purpose}`:t},Y=t=>{const r=D.value.find(B=>B.id===t);return r?`${r.name}${r.description?" - "+r.description:""}`:t},Z=t=>{d.selectedUeIds=t},$=t=>{const r=d.selectedUeIds.indexOf(t);r>-1&&d.selectedUeIds.splice(r,1)},ee=t=>{d.selectedNetworkIds=t},te=t=>{const r=d.selectedNetworkIds.indexOf(t);r>-1&&d.selectedNetworkIds.splice(r,1)},le=()=>{o.value="新增逻辑环境",L.value=!0,W(),O(),e(),u()},oe=t=>{o.value="编辑逻辑环境",Object.assign(d,t),t.ueList&&t.ueList.length>0?d.selectedUeIds=t.ueList.map(r=>r.id):d.selectedUeIds=[],t.networkList&&t.networkList.length>0?d.selectedNetworkIds=t.networkList.map(r=>r.id):d.selectedNetworkIds=[],L.value=!0,O(),e(),u()},ae=async t=>{try{await be.confirm("确定要删除这个逻辑环境吗？","提示",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await f({url:`/logic-environment/${t.id}`,method:"delete"}),v.success("删除成功"),h()}catch(r){r!=="cancel"&&v.error("删除失败")}},ne=async()=>{try{if(await q.value.validate(),d.id){const t={logicEnvironment:{name:d.name,executorId:d.executorId,description:d.description,status:d.status},ueIds:d.selectedUeIds,networkIds:d.selectedNetworkIds};await f({url:`/logic-environment/${d.id}/with-ue-and-network`,method:"put",data:t}),v.success("更新成功")}else{const t={logicEnvironment:{name:d.name,executorId:d.executorId,description:d.description,status:d.status},ueIds:d.selectedUeIds,networkIds:d.selectedNetworkIds};await f({url:"/logic-environment/with-ue-and-network",method:"post",data:t}),v.success("创建成功")}L.value=!1,h()}catch(t){console.error("提交失败:",t),v.error("操作失败")}},W=()=>{Object.assign(d,{id:null,name:"",executorId:null,selectedUeIds:[],selectedNetworkIds:[],description:"",status:1}),q.value&&q.value.resetFields()},re=async t=>{_.value=t.id,g.value=!0,await H(t.id),await J()},H=async t=>{try{const r=await f({url:`/logic-environment/${t}/ue`,method:"get"});Q.value=r.data}catch(r){console.error("加载当前UE失败:",r)}},J=async()=>{try{const t=await f({url:"/ue/list",method:"get"});w.value=t.data}catch(t){console.error("加载可用UE失败:",t)}},de=async()=>{if(N.value)try{await f({url:`/logic-environment/${_.value}/ue`,method:"post",data:[N.value]}),v.success("添加UE成功"),N.value=null,await H(_.value),await J()}catch{v.error("添加UE失败")}},se=async t=>{try{await f({url:`/logic-environment/${_.value}/ue/${t.ueId}`,method:"delete"}),v.success("移除UE成功"),await H(_.value),await J()}catch{v.error("移除UE失败")}},ie=async t=>{_.value=t.id,T.value=!0,await j(t.id),await R()},j=async t=>{try{const r=await f({url:`/logic-environment/${t}/network`,method:"get"});F.value=r.data}catch(r){console.error("加载当前组网失败:",r)}},R=async()=>{try{const t=await f({url:"/logic-network/list",method:"get"});A.value=t.data}catch(t){console.error("加载可用组网失败:",t)}},ue=async()=>{if(y.value)try{await f({url:`/logic-environment/${_.value}/network`,method:"post",data:[y.value]}),v.success("添加组网成功"),y.value=null,await j(_.value),await R()}catch{v.error("添加组网失败")}},ce=async t=>{try{await f({url:`/logic-environment/${_.value}/network/${t.id}`,method:"delete"}),v.success("移除组网成功"),await j(_.value),await R()}catch{v.error("移除组网失败")}},me=()=>{b.value=[{name:"",description:""}],I.value=!0},ge=()=>{b.value.push({name:"",description:""})},we=t=>{b.value.splice(t,1)},pe=async()=>{for(let t=0;t<b.value.length;t++){const r=b.value[t];if(!r.name||!r.name.trim()){v.warning(`请填写组网 ${t+1} 的名称`);return}}try{const t=[];for(const r of b.value){const B=await f({url:"/logic-network",method:"post",data:{name:r.name.trim(),description:r.description?r.description.trim():""}});t.push(B.data)}for(const r of t)d.selectedNetworkIds.includes(r.id)||d.selectedNetworkIds.push(r.id);await u(),v.success(`成功创建 ${t.length} 个逻辑组网`),I.value=!1}catch(t){console.error("快速添加组网失败:",t),v.error("快速添加组网失败")}},ke=t=>{x.size=t,h()},fe=t=>{x.current=t,h()};return _e(()=>{h(),O(),e(),u()}),{loading:M,tableData:l,pagination:x,dialogVisible:L,dialogTitle:o,formRef:q,form:d,rules:G,executorOptions:P,ueOptions:z,networkOptions:D,ueDialogVisible:g,currentUes:Q,availableUes:w,selectedUeId:N,loadData:h,handleAdd:le,handleEdit:oe,handleDelete:ae,handleSubmit:ne,resetForm:W,handleManageUe:re,addUe:de,removeUe:se,handleSizeChange:ke,handleCurrentChange:fe,getUeDisplayName:S,handleUeSelectionChange:Z,removeSelectedUe:$,networkDialogVisible:T,currentNetworks:F,availableNetworks:A,selectedNetworkId:y,handleManageNetwork:ie,loadCurrentNetworks:j,loadAvailableNetworks:R,addNetwork:ue,removeNetwork:ce,getNetworkDisplayName:Y,handleNetworkSelectionChange:ee,removeSelectedNetwork:te,showAddNetworkDialog:me,quickAddNetworkDialogVisible:I,quickAddNetworks:b,addQuickAddNetwork:ge,removeQuickAddNetwork:we,submitQuickAddNetworks:pe}}},Ne={class:"logic-environment-page"},Ce={class:"table-operations"},Ve={style:{color:"#909399","font-size":"12px"}},Ie={key:0},xe={key:1,style:{color:"#909399"}},Ee={key:0},De={key:1,style:{color:"#909399"}},ze={class:"pagination"},Ae={class:"selected-ue-list"},Se={style:{"margin-bottom":"10px"}},Le={class:"selected-network-list"},qe={class:"dialog-footer"},Oe={class:"ue-management"},Be={class:"ue-section"},Me={class:"ue-section"},Qe={class:"network-management"},Te={class:"network-section"},Fe={class:"network-section"},je={class:"quick-add-network"},Re={class:"network-list"},Pe={class:"add-network-button"},Ge={class:"dialog-footer"};function He(M,l,L,o,q,P){const z=k("Plus"),D=k("el-icon"),g=k("el-button"),Q=k("Refresh"),w=k("el-table-column"),N=k("el-tag"),_=k("el-table"),T=k("el-pagination"),F=k("el-card"),A=k("el-input"),y=k("el-form-item"),I=k("el-option"),b=k("el-select"),x=k("el-radio"),d=k("el-radio-group"),G=k("el-form"),h=k("el-dialog"),O=ye("loading");return s(),p("div",Ne,[l[37]||(l[37]=i("div",{class:"page-header"},[i("h2",{class:"page-title"},"逻辑环境管理"),i("p",{class:"page-description"},"管理执行机和UE的组合逻辑环境")],-1)),a(F,null,{default:n(()=>[i("div",Ce,[a(g,{type:"primary",onClick:o.handleAdd},{default:n(()=>[a(D,null,{default:n(()=>[a(z)]),_:1}),l[16]||(l[16]=c(" 新增逻辑环境 ",-1))]),_:1,__:[16]},8,["onClick"]),a(g,{onClick:o.loadData},{default:n(()=>[a(D,null,{default:n(()=>[a(Q)]),_:1}),l[17]||(l[17]=c(" 刷新 ",-1))]),_:1,__:[17]},8,["onClick"])]),he((s(),U(_,{data:o.tableData,style:{width:"100%"}},{default:n(()=>[a(w,{prop:"name",label:"逻辑环境名称"}),a(w,{label:"执行机","min-width":"200"},{default:n(e=>[i("div",null,[i("div",null,E(e.row.executorName),1),i("div",Ve,E(e.row.executorIpAddress),1)])]),_:1}),a(w,{label:"UE信息","min-width":"300"},{default:n(e=>[e.row.ueList&&e.row.ueList.length>0?(s(),p("div",Ie,[(s(!0),p(C,null,V(e.row.ueList,u=>(s(),p("div",{key:u.id,style:{"margin-bottom":"8px"}},[a(N,{size:"small",type:"info"},{default:n(()=>[c(E(u.name)+" ("+E(u.ueId)+") - "+E(u.purpose),1)]),_:2},1024)]))),128))])):(s(),p("span",xe,"暂无UE"))]),_:1}),a(w,{label:"逻辑组网","min-width":"200"},{default:n(e=>[e.row.networkList&&e.row.networkList.length>0?(s(),p("div",Ee,[(s(!0),p(C,null,V(e.row.networkList,u=>(s(),p("div",{key:u.id,style:{"margin-bottom":"8px"}},[a(N,{size:"small",type:"success"},{default:n(()=>[c(E(u.name),1)]),_:2},1024)]))),128))])):(s(),p("span",De,"暂无组网"))]),_:1}),a(w,{prop:"description",label:"描述"}),a(w,{prop:"status",label:"状态"},{default:n(e=>[a(N,{type:e.row.status===1?"success":"danger"},{default:n(()=>[c(E(e.row.status===1?"启用":"禁用"),1)]),_:2},1032,["type"])]),_:1}),a(w,{prop:"createTime",label:"创建时间"}),a(w,{label:"操作",width:"300"},{default:n(e=>[a(g,{size:"small",onClick:u=>o.handleEdit(e.row)},{default:n(()=>l[18]||(l[18]=[c("编辑",-1)])),_:2,__:[18]},1032,["onClick"]),a(g,{size:"small",type:"primary",onClick:u=>o.handleManageUe(e.row)},{default:n(()=>l[19]||(l[19]=[c("管理UE",-1)])),_:2,__:[19]},1032,["onClick"]),a(g,{size:"small",type:"warning",onClick:u=>o.handleManageNetwork(e.row)},{default:n(()=>l[20]||(l[20]=[c("管理组网",-1)])),_:2,__:[20]},1032,["onClick"]),a(g,{size:"small",type:"danger",onClick:u=>o.handleDelete(e.row)},{default:n(()=>l[21]||(l[21]=[c("删除",-1)])),_:2,__:[21]},1032,["onClick"])]),_:1})]),_:1},8,["data"])),[[O,o.loading]]),i("div",ze,[a(T,{"current-page":o.pagination.current,"onUpdate:currentPage":l[0]||(l[0]=e=>o.pagination.current=e),"page-size":o.pagination.size,"onUpdate:pageSize":l[1]||(l[1]=e=>o.pagination.size=e),"page-sizes":[10,20,50,100],total:o.pagination.total,layout:"total, sizes, prev, pager, next, jumper",onSizeChange:o.handleSizeChange,onCurrentChange:o.handleCurrentChange},null,8,["current-page","page-size","total","onSizeChange","onCurrentChange"])])]),_:1}),a(h,{modelValue:o.dialogVisible,"onUpdate:modelValue":l[9]||(l[9]=e=>o.dialogVisible=e),title:o.dialogTitle,width:"600px",onClose:o.resetForm},{footer:n(()=>[i("span",qe,[a(g,{onClick:l[8]||(l[8]=e=>o.dialogVisible=!1)},{default:n(()=>l[25]||(l[25]=[c("取消",-1)])),_:1,__:[25]}),a(g,{type:"primary",onClick:o.handleSubmit},{default:n(()=>l[26]||(l[26]=[c("确定",-1)])),_:1,__:[26]},8,["onClick"])])]),default:n(()=>[a(G,{ref:"formRef",model:o.form,rules:o.rules,"label-width":"120px"},{default:n(()=>[a(y,{label:"逻辑环境名称",prop:"name"},{default:n(()=>[a(A,{modelValue:o.form.name,"onUpdate:modelValue":l[2]||(l[2]=e=>o.form.name=e),placeholder:"请输入逻辑环境名称"},null,8,["modelValue"])]),_:1}),a(y,{label:"执行机",prop:"executorId"},{default:n(()=>[a(b,{modelValue:o.form.executorId,"onUpdate:modelValue":l[3]||(l[3]=e=>o.form.executorId=e),placeholder:"请选择执行机",style:{width:"100%"}},{default:n(()=>[(s(!0),p(C,null,V(o.executorOptions,e=>(s(),U(I,{key:e.id,label:`${e.name} (${e.ipAddress}) - ${e.regionName}`,value:e.id},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),a(y,{label:"UE选择",prop:"selectedUeIds"},{default:n(()=>[a(b,{modelValue:o.form.selectedUeIds,"onUpdate:modelValue":l[4]||(l[4]=e=>o.form.selectedUeIds=e),multiple:"",filterable:"",placeholder:"请选择UE",style:{width:"100%"},onChange:o.handleUeSelectionChange},{default:n(()=>[(s(!0),p(C,null,V(o.ueOptions,e=>(s(),U(I,{key:e.id,label:`${e.name} (${e.ueId}) - ${e.purpose}`,value:e.id},null,8,["label","value"]))),128))]),_:1},8,["modelValue","onChange"])]),_:1}),o.form.selectedUeIds&&o.form.selectedUeIds.length>0?(s(),U(y,{key:0,label:"已选UE"},{default:n(()=>[i("div",Ae,[(s(!0),p(C,null,V(o.form.selectedUeIds,e=>(s(),U(N,{key:e,closable:"",onClose:u=>o.removeSelectedUe(e),style:{"margin-right":"8px","margin-bottom":"8px"}},{default:n(()=>[c(E(o.getUeDisplayName(e)),1)]),_:2},1032,["onClose"]))),128))])]),_:1})):K("",!0),a(y,{label:"逻辑组网选择",prop:"selectedNetworkIds"},{default:n(()=>[i("div",Se,[a(g,{size:"small",type:"primary",onClick:o.showAddNetworkDialog},{default:n(()=>[a(D,null,{default:n(()=>[a(z)]),_:1}),l[22]||(l[22]=c(" 快速添加组网 ",-1))]),_:1,__:[22]},8,["onClick"])]),a(b,{modelValue:o.form.selectedNetworkIds,"onUpdate:modelValue":l[5]||(l[5]=e=>o.form.selectedNetworkIds=e),multiple:"",filterable:"",placeholder:"请选择逻辑组网",style:{width:"100%"},onChange:o.handleNetworkSelectionChange},{default:n(()=>[(s(!0),p(C,null,V(o.networkOptions,e=>(s(),U(I,{key:e.id,label:`${e.name}${e.description?" - "+e.description:""}`,value:e.id},null,8,["label","value"]))),128))]),_:1},8,["modelValue","onChange"])]),_:1}),o.form.selectedNetworkIds&&o.form.selectedNetworkIds.length>0?(s(),U(y,{key:1,label:"已选组网"},{default:n(()=>[i("div",Le,[(s(!0),p(C,null,V(o.form.selectedNetworkIds,e=>(s(),U(N,{key:e,closable:"",onClose:u=>o.removeSelectedNetwork(e),style:{"margin-right":"8px","margin-bottom":"8px"}},{default:n(()=>[c(E(o.getNetworkDisplayName(e)),1)]),_:2},1032,["onClose"]))),128))])]),_:1})):K("",!0),a(y,{label:"描述",prop:"description"},{default:n(()=>[a(A,{modelValue:o.form.description,"onUpdate:modelValue":l[6]||(l[6]=e=>o.form.description=e),type:"textarea",rows:3,placeholder:"请输入描述"},null,8,["modelValue"])]),_:1}),a(y,{label:"状态",prop:"status"},{default:n(()=>[a(d,{modelValue:o.form.status,"onUpdate:modelValue":l[7]||(l[7]=e=>o.form.status=e)},{default:n(()=>[a(x,{label:1},{default:n(()=>l[23]||(l[23]=[c("启用",-1)])),_:1,__:[23]}),a(x,{label:0},{default:n(()=>l[24]||(l[24]=[c("禁用",-1)])),_:1,__:[24]})]),_:1},8,["modelValue"])]),_:1})]),_:1},8,["model","rules"])]),_:1},8,["modelValue","title","onClose"]),a(h,{modelValue:o.ueDialogVisible,"onUpdate:modelValue":l[11]||(l[11]=e=>o.ueDialogVisible=e),title:"管理UE",width:"600px"},{default:n(()=>[i("div",Oe,[i("div",Be,[l[28]||(l[28]=i("h4",null,"当前UE列表",-1)),a(_,{data:o.currentUes,style:{width:"100%"}},{default:n(()=>[a(w,{prop:"name",label:"UE名称"}),a(w,{prop:"ueId",label:"UE ID"}),a(w,{prop:"purpose",label:"用途"}),a(w,{label:"操作",width:"100"},{default:n(e=>[a(g,{size:"small",type:"danger",onClick:u=>o.removeUe(e.row)},{default:n(()=>l[27]||(l[27]=[c("移除",-1)])),_:2,__:[27]},1032,["onClick"])]),_:1})]),_:1},8,["data"])]),i("div",Me,[l[29]||(l[29]=i("h4",null,"添加UE",-1)),a(b,{modelValue:o.selectedUeId,"onUpdate:modelValue":l[10]||(l[10]=e=>o.selectedUeId=e),placeholder:"请选择要添加的UE",style:{width:"100%"},onChange:o.addUe},{default:n(()=>[(s(!0),p(C,null,V(o.availableUes,e=>(s(),U(I,{key:e.id,label:e.name,value:e.id},null,8,["label","value"]))),128))]),_:1},8,["modelValue","onChange"])])])]),_:1},8,["modelValue"]),a(h,{modelValue:o.networkDialogVisible,"onUpdate:modelValue":l[13]||(l[13]=e=>o.networkDialogVisible=e),title:"管理逻辑组网",width:"600px"},{default:n(()=>[i("div",Qe,[i("div",Te,[l[31]||(l[31]=i("h4",null,"当前组网列表",-1)),a(_,{data:o.currentNetworks,style:{width:"100%"}},{default:n(()=>[a(w,{prop:"name",label:"组网名称"}),a(w,{prop:"description",label:"描述"}),a(w,{label:"操作",width:"100"},{default:n(e=>[a(g,{size:"small",type:"danger",onClick:u=>o.removeNetwork(e.row)},{default:n(()=>l[30]||(l[30]=[c("移除",-1)])),_:2,__:[30]},1032,["onClick"])]),_:1})]),_:1},8,["data"])]),i("div",Fe,[l[32]||(l[32]=i("h4",null,"添加组网",-1)),a(b,{modelValue:o.selectedNetworkId,"onUpdate:modelValue":l[12]||(l[12]=e=>o.selectedNetworkId=e),placeholder:"请选择要添加的组网",style:{width:"100%"},onChange:o.addNetwork},{default:n(()=>[(s(!0),p(C,null,V(o.availableNetworks,e=>(s(),U(I,{key:e.id,label:`${e.name}${e.description?" - "+e.description:""}`,value:e.id},null,8,["label","value"]))),128))]),_:1},8,["modelValue","onChange"])])])]),_:1},8,["modelValue"]),a(h,{modelValue:o.quickAddNetworkDialogVisible,"onUpdate:modelValue":l[15]||(l[15]=e=>o.quickAddNetworkDialogVisible=e),title:"快速添加逻辑组网",width:"500px"},{footer:n(()=>[i("span",Ge,[a(g,{onClick:l[14]||(l[14]=e=>o.quickAddNetworkDialogVisible=!1)},{default:n(()=>l[35]||(l[35]=[c("取消",-1)])),_:1,__:[35]}),a(g,{type:"primary",onClick:o.submitQuickAddNetworks},{default:n(()=>l[36]||(l[36]=[c("确定",-1)])),_:1,__:[36]},8,["onClick"])])]),default:n(()=>[i("div",je,[i("div",Re,[(s(!0),p(C,null,V(o.quickAddNetworks,(e,u)=>(s(),p("div",{key:u,class:"network-item"},[a(y,{label:`组网 ${u+1}`,prop:`networks.${u}.name`},{default:n(()=>[a(A,{modelValue:e.name,"onUpdate:modelValue":S=>e.name=S,placeholder:"请输入组网名称",style:{width:"100%","margin-bottom":"8px"}},null,8,["modelValue","onUpdate:modelValue"]),a(A,{modelValue:e.description,"onUpdate:modelValue":S=>e.description=S,type:"textarea",rows:2,placeholder:"请输入组网描述（可选）",style:{width:"100%"}},null,8,["modelValue","onUpdate:modelValue"])]),_:2},1032,["label","prop"]),o.quickAddNetworks.length>1?(s(),U(g,{key:0,size:"small",type:"danger",onClick:S=>o.removeQuickAddNetwork(u),style:{"margin-top":"8px"}},{default:n(()=>l[33]||(l[33]=[c(" 删除 ",-1)])),_:2,__:[33]},1032,["onClick"])):K("",!0)]))),128))]),i("div",Pe,[a(g,{type:"primary",onClick:o.addQuickAddNetwork},{default:n(()=>[a(D,null,{default:n(()=>[a(z)]),_:1}),l[34]||(l[34]=c(" 添加更多组网 ",-1))]),_:1,__:[34]},8,["onClick"])])])]),_:1},8,["modelValue"])])}const We=ve(Ue,[["render",He],["__scopeId","data-v-dd7e01a8"]]);export{We as default};
